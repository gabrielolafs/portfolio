// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider   = "prisma-client-js"
  output     = "../.prisma/client"
  engineType = "binary"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

// example table used in the express router example (to be commented out when routes and everything else has be altered / deleted)
model HighScore {
  id    Int      @id @default(autoincrement())
  time  DateTime
  score Int
}

model Logged {
  Outfit   Outfit   @relation("Logged", fields: [outfitID], references: [outfitID])
  outfitID Int      @id
  date     DateTime
}

model Hamper {
  Peice     Peice    @relation("Dirty", fields: [peiceID], references: [peiceID])
  peiceID   Int      @id
  dateAdded DateTime
}

model Saved {
  savedID  Int    @id @default(autoincrement())
  outfitID Int    @unique
  name     String

  Outfit Outfit @relation("Saved", fields: [outfitID], references: [outfitID])
}

model Outfit {
  outfitID Int @id @default(autoincrement())
  shirtID  Int @unique
  pantsID  Int @unique

  Logged Logged? @relation("Logged")
  Saved  Saved?  @relation("Saved")

  shirt Shirt? @relation("ShirtID", fields: [shirtID], references: [peiceID])
  pants Pants? @relation("PantsID", fields: [pantsID], references: [peiceID])
}

model Peice {
  peiceID        Int      @id @default(autoincrement())
  price          Int
  wears          Int
  wearsSinceWash Int
  lastWash       DateTime

  Hamper Hamper? @relation("Dirty")

  Shirt Shirt? @relation("Shirt")
  Pants Pants? @relation("Pants")
}

model Shirt {
  Peice   Peice  @relation("Shirt", fields: [peiceID], references: [peiceID])
  peiceID Int    @id
  Size    String

  Outfit Outfit? @relation("ShirtID")
}

model Pants {
  peiceID Int @id
  waiste  Int

  Peice  Peice   @relation("Pants", fields: [peiceID], references: [peiceID])
  Outfit Outfit? @relation("PantsID")
}
